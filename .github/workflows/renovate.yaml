name: Renovate

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  schedule:
    - cron: '0 */12 * * *'  #runs every 12 hours
jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@v1
        with:
          private_key: ${{ secrets.PRIVATE_KEY }}
          app_id: ${{ secrets.APP_ID }}
          
      - name: Validate and set repositories
        run: |
          JSON=$(yq e -o=json . < repos/repositories.yaml)
          echo $JSON | jq . > /dev/null
          if [ $? -eq 0 ]; then
            JSON=$(echo $JSON | tr -d '\n')
            echo "REPOSITORIES=$JSON" >> $GITHUB_ENV
          else
            echo "Invalid JSON"
            exit 1
          fi
      - name: Run Renovate
        uses: renovatebot/github-action@v39.1.1
        with:
          renovate-version: 37.347.1-slim
          configurationFile: config.js
          token: '${{ steps.get_token.outputs.token }}'
          env-regex: "^(?:RENOVATE_\\w+|LOG_LEVEL|GITHUB_COM_TOKEN|NODE_OPTIONS|REPOSITORIES)$"
        env:
          LOG_LEVEL: debug
          # LOG_FORMAT: json
          REPOSITORIES: ${{ env.REPOSITORIES }}
          RENOVATE_DRY_RUN: ${{ github.event_name == 'pull_request' && 'full' || '' }}
          RENOVATE_ART_SECRET_USERNAME: ${{ secrets.RENOVATE_ART_SECRET_USERNAME }}
          RENOVATE_ART_SECRET_PASSWORD: ${{ secrets.RENOVATE_ART_SECRET_PASSWORD }}
          #OTEL_EXPORTER_OTLP_ENDPOINT: "http://ec2-18-117-118-1.us-east-2.compute.amazonaws.com:4318"
          #RENOVATE_TRACING_CONSOLE_EXPORTER: "true"
  notification:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
    permissions:
      id-token: write
      contents: read
    name: Notify PagerDuty
    needs: [renovate]
    if: failure()
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Debug
        run: |
          pwd
          ls -l
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: us-east-1
          role-session-name: GitHub-Actions-Session
      - name: Step name
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids:
            #PAGERDUTY_API_TOKEN, pagerdutytoken
            PAGERDUTY_API_TOKEN, pagerdutyeventtoken
          parse-json-secrets: true
      - name: Run the script 
        working-directory: ./scripts
        run: bash eventroute.sh
        env:
          token: ${{ env.PAGERDUTY_API_TOKEN_PAGERDUTYEVENTTOKEN }}
      #- name: Run the script 
      #  working-directory: ./scripts
      #  run: bash script.sh
      #  env:
      #    token: ${{ env.PAGERDUTY_API_TOKEN_PAGERDUTYTOKEN }}
    

      
      #- name: Report Status
      #  if: always()
      #  uses: ravsamhq/notify-slack-action@v1
      #  with:
      #    status: ${{ job.status }}
      #    notify_when: 'failure,success,warning'
      #  env:
      #    SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      
      #- name: Send PagerDuty alert on failure
      #  if: ${{ failure() }}
      #  uses: Entle/action-pagerduty-alert@0.2.0
      #  with:
      #    pagerduty-integration-key: '${{ secrets.PAGERDUTY_INTEGRATION_KEY }}'
      #    pagerduty-dedup-key: github_workflow_failed
